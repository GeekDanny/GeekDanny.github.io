<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>中国人的“芯病”何去何从</title>
      <link href="/2020/05/16/huaweichip/"/>
      <url>/2020/05/16/huaweichip/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h2 id="美国全面打压华为的背后-中国人的“芯病”何去何从"><a href="#美国全面打压华为的背后-中国人的“芯病”何去何从" class="headerlink" title="美国全面打压华为的背后:中国人的“芯病”何去何从"></a>美国全面打压华为的背后:中国人的“芯病”何去何从</h2><p><a href="https://i1.wp.com/mmbiz.qpic.cn/mmbiz_gif/RIQJDM7oiajfmzibMuEf9SmWxdYiaLdV9HwZrvibV8nkic8y2nWZxLoERDuQsRtIrMFKx9moYox1IGrkGmXCsBE0ltQ/640?wx_fmt=gif" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" data-src="https://i1.wp.com/mmbiz.qpic.cn/mmbiz_gif/RIQJDM7oiajfmzibMuEf9SmWxdYiaLdV9HwZrvibV8nkic8y2nWZxLoERDuQsRtIrMFKx9moYox1IGrkGmXCsBE0ltQ/640?wx_fmt=gif" class="lazyload" title="img"></a></p><h1 id="中国芯片之殇"><a href="#中国芯片之殇" class="headerlink" title="中国芯片之殇"></a>中国芯片之殇</h1><p>2019年5月18日，美国将华为列入了“实体名单”。</p><p>所谓“实体名单”是美国为了维护其国家利益，作为出口管制的重要手段。进入到这个名单的公司，在没有得到美国政府许可的情况下，美国公司不能和名单上的企业合作。</p><p>简单说实体名单就是一份黑名单，企业一旦上榜就被剥夺了和美国进行贸易的机会，华为开始被美国政府掐住了喉咙。</p><p><a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/Y8Rzld.png" data-fancybox="group" data-caption="Y8Rzld" class="fancybox"><img alt="Y8Rzld" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/Y8Rzld.png" class="lazyload" title="Y8Rzld"></a></p><p>尽管当时限制了美国公司和华为的合作，但华为还有一线生机。华为手里有自己的芯片设计公司：“一夜转正”的华为海思。</p><p>虽然华为没有芯片生产能力，所幸的是世界上最大的芯片代工企业是台湾的台积电，并不是一家美国公司。华为还能够通过台积电代加工得到自己的高性能芯片。</p><p>一年后的现在，美国对华为要落井下石。</p><p>2020年5月15日，美国商务部发布一则公告：一年前只是禁止美国公司和华为开展业务，现在美国限制了全世界所有的半导体工厂，这些工厂不管是哪个国家的，只要有使用到美国软件和设备，在为华为生产芯片之前，就必须获得美国政府的许可。</p><p><a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/GC5BGD.png" data-fancybox="group" data-caption="GC5BGD" class="fancybox"><img alt="GC5BGD" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/GC5BGD.png" class="lazyload" title="GC5BGD"></a></p><p>▲美国商务部：华为破坏了实体名单限制华为使用美国科技生产产品</p><p>最狠的是这条禁令是无差别全面打击，不只是华为，所有需要美国软件、技术、设备的芯片制造商，不管是中国、日本、还是韩国企业，都逃不开美国的技术和设备。只要是为华为造芯片，就要受美国管制。</p><p>此令一出，中方表示，如果美国针对华为的方案实施，那么将予以强力反击，将相关企业列入“不可靠实体清单”，依照相关法律对高通、思科、苹果等美国企业展开限制与调查，甚至暂停采购波音客机。</p><p>一场科技封锁战的铁幕在大国之间落下已然是事实。</p><h1 id="01-信息时代“芯”是有多么重要"><a href="#01-信息时代“芯”是有多么重要" class="headerlink" title="01 信息时代“芯”是有多么重要"></a>01 信息时代“芯”是有多么重要</h1><p>我们常说如今社会步入了信息化时代，一个手机基本就能搞定每个人每天的所有诉求，玩“吃鸡”逛淘宝，外卖小哥顺着定位就能给你送餐到家，一个智能手机已经是时代标配。</p><p>从小小的手机，到大型工业设备设施的运行，乃至网络，电力，国防，没有一个环节离不开硬件的支撑。而硬件之核心，乃是芯片。</p><p>抛开芯片谈信息技术发展，就如同跟陌生女孩聊结婚，都是耍无赖行为。</p><p>而信息时代中这些社会运转的基础就是芯片，中国人需要的芯片有多依赖进口？看这样一组数据。</p><p>中国高端芯片完全不能自给自足，80%依赖进口。去年中国进口芯片花掉3000多亿美元，是进口原油价格的两倍，约等于中国军费的两倍，相当于造80艘航空母舰的开销。</p><p><a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/tIjojk.png" data-fancybox="group" data-caption="tIjojk" class="fancybox"><img alt="tIjojk" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/tIjojk.png" class="lazyload" title="tIjojk"></a></p><p>据《G20国家创新竞争力黄皮书》显示：中国在军用航天级芯片上基本能实现自给自足，中低档的芯片甚至满足自己的需要外还能大量出口，但是在高端芯片上进口依赖度飙升，80%靠进口。</p><p>电子消费级市场也很难见到中国自己的高端芯片。每个人离不开的电脑手机，其中高端芯片基本是国外产品的天下，有时候事实体现在钱上更有说服力。</p><p><a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/EcHCwq.png" data-fancybox="group" data-caption="EcHCwq" class="fancybox"><img alt="EcHCwq" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/EcHCwq.png" class="lazyload" title="EcHCwq"></a></p><p>▲2018年进口额达到3120.58亿美元图片来自：中商产业研究院</p><p>从2012年开始，中国集成电路进口额连续突破2000亿美元，2000亿美元什么概念？按照2017年汇率来算，2000亿美元折合人民币是13200亿人民币。</p><p>2017年中国军费开支是10433亿人民币，如果按照网上所言，山东舰造价250亿人民币左右（不包含舰载机等费用），2018年中国进口芯片的开支也就比军费多出来10艘辽宁舰吧！</p><p><a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/JcJa1w.png" data-fancybox="group" data-caption="JcJa1w" class="fancybox"><img alt="JcJa1w" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/JcJa1w.png" class="lazyload" title="JcJa1w"></a></p><p>▲2019原油进口额1662亿美元图片来自：中商产业研究院</p><p>2019年中国集成电路进口额更是达到了3055亿美元（21048亿人民币），占中国整年总进口额的14.7%，同年中国原油进口额是1662亿美元约为芯片进口额的一半。</p><p>10年前美国杂志《连线》一篇文章开篇中写到：“试想，一个国家需要完全依靠从一个与之有着战事冲突或者经济往来不稳定的国家进口某种珍贵商品，而且没有这种商品，其整个社会将被迫停顿。假如这个国家是中国，与之有冲突的国家是美国，而该商品就是芯片。”</p><p>中国、美国、贸易冲突、芯片，《连线》杂志一语成谶。中方的反制措施当然很有必要，但是依然无法掩饰中国在芯片领域的落后。</p><p>指甲盖大小的芯片，已然成为这场大国较量中的主角。</p><h1 id="02-芯片怎么造？"><a href="#02-芯片怎么造？" class="headerlink" title="02 芯片怎么造？"></a>02 芯片怎么造？</h1><p>芯片是世界上最硬核的高科技产业，以纳米来计量的制造过程极为复杂，产业链涉及到50多个行业、数千个环节，世界上没有多少公司能够包办芯片生产的所有环节，芯片产业形成一条齐整的产业链。</p><p><a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/FHpv6U.png" data-fancybox="group" data-caption="FHpv6U" class="fancybox"><img alt="FHpv6U" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/FHpv6U.png" class="lazyload" title="FHpv6U"></a></p><p>总的来说有芯片设计、芯片制造、芯片封测、芯片材料、芯片设备这5大类，整个产业链条里，中国占据的份额极少。 <a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/UE39V3.png" data-fancybox="group" data-caption="UE39V3" class="fancybox"><img alt="UE39V3" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/UE39V3.png" class="lazyload" title="UE39V3"></a><br>▲芯片设计公司华为海思排名第5</p><p> 为了方便大家更直观的了解芯片，不妨通过一个有意思的比方来讲。</p><p>我们如果把做芯片看作厨师做菜，那么做好一个菜，首先要有好的食材，然后你这个厨子做菜的炊具要好，最后当然是你这个厨子肚子里面有没有好的菜谱。</p><p>做芯片粗看一下也可以理解成这么几块，首先要有好的原材料，还要有好的生产制作工具，而且还要有优秀的芯片设计，这三个能力OK，好的芯片才能做出来。</p><p>先说“食材”部分</p><p>芯片听起来挺高级，制造原料实际是蓝星最不值钱的沙子。芯片主要的原材料是硅，硅元素在地球上的储量仅次于氧元素。 <a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/QRGe2J.png" data-fancybox="group" data-caption="QRGe2J" class="fancybox"><img alt="QRGe2J" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/QRGe2J.png" class="lazyload" title="QRGe2J"></a></p><p>▲芯片的原材料就是长这样</p><p>如果你家门口有一堆沙，那么恭喜你已经有了制造高性能芯片的原材料，可也仅仅是原材料。</p><p>沙子很多，但是难得是要把沙子里的硅提纯出来，如果要生产高性能芯片，一般的硅纯度完全不够，需要纯度达到99.999999999%的电子级多晶硅，这么9不是我瞎打的，一共9个9。</p><p>也就是说在100万个硅原子中最多只允许存在1个杂质原子，这个尺度放大一些，也就是说5000吨的电子级多晶硅杂质含量仅仅有1枚1元硬币那么多。 商场里的金饰为了标榜自己的高纯度，经常会有千足金的标签，也就是说金的纯度是99.999%，和千足金类比，那99.999999999%纯度的电子级多晶硅可以改个名字叫亿足硅。</p><p><a href="https://i1.wp.com/mmbiz.qpic.cn/mmbiz_gif/RIQJDM7oiajfmzibMuEf9SmWxdYiaLdV9HwfmGtZxFujZoHib4ljwHuAGXiaarGSaRwwYJN2WjHdrbJBIsibb6xtvwMQ/640?wx_fmt=gif" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" data-src="https://i1.wp.com/mmbiz.qpic.cn/mmbiz_gif/RIQJDM7oiajfmzibMuEf9SmWxdYiaLdV9HwfmGtZxFujZoHib4ljwHuAGXiaarGSaRwwYJN2WjHdrbJBIsibb6xtvwMQ/640?wx_fmt=gif" class="lazyload" title="img"></a></p><p>▲沙子提纯单晶硅棒</p><p><a href="https://i1.wp.com/mmbiz.qpic.cn/mmbiz_gif/RIQJDM7oiajfmzibMuEf9SmWxdYiaLdV9Hwic69cHCQiblzTDFqwu25GQw9e7IGGGMOeUJrxBiaLR9IGPF5WHI2Akq2Q/640?wx_fmt=gif" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" data-src="https://i1.wp.com/mmbiz.qpic.cn/mmbiz_gif/RIQJDM7oiajfmzibMuEf9SmWxdYiaLdV9Hwic69cHCQiblzTDFqwu25GQw9e7IGGGMOeUJrxBiaLR9IGPF5WHI2Akq2Q/640?wx_fmt=gif" class="lazyload" title="img"></a></p><p>▲硅棒切割成晶圆 得到电子级多晶硅锭以后，将圆柱形的硅锭横向切割成圆形的单个硅片，叫做晶圆，切割好的晶圆表面几乎是完美无瑕的。</p><p>造芯片最基础的电子级多晶硅就是中国还没有迈过去的一个坎。</p><p>大厨想要做好菜，缺了好食材不行。在芯片材料方面日本一家独大。拿硅晶圆全球份额占比来说，日本公司占去50%，中国台湾地区17%，德国15%，韩国9%，这5个地区占去了全球94%的份额，在这里中国大陆没有名字。 <a href="https://i1.wp.com/mmbiz.qpic.cn/mmbiz_jpg/RIQJDM7oiajfmzibMuEf9SmWxdYiaLdV9HwwklCw956CQicqO7ALjnp5sU5ialia1THZl7Z2Qr006luXxTNQMF650Jfw/640?wx_fmt=jpeg" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" data-src="https://i1.wp.com/mmbiz.qpic.cn/mmbiz_jpg/RIQJDM7oiajfmzibMuEf9SmWxdYiaLdV9HwwklCw956CQicqO7ALjnp5sU5ialia1THZl7Z2Qr006luXxTNQMF650Jfw/640?wx_fmt=jpeg" class="lazyload" title="img"></a></p><p>▲世界芯片设备份额占比来源：招商证券</p><p>“厨师的工具与菜谱”</p><p>有了好的原材料“硅晶圆”之后就轮到大厨用菜刀按照菜谱处理了。“菜刀”就是生产芯片的设备，菜谱就是芯片的设计。</p><p>芯片设计通俗来说就是“写菜谱”的。以2018年统计数据为例，世界芯片设计产业中美国的博通、高通、英伟达霸榜前3名，第4名是中国台湾地区的联发科，第5名是中国大陆的华为海思。</p><p>芯片核心外表看起来很光滑，可芯片刻蚀不只是一层，要经过多次重复刻蚀，形成一个分层的立体结构，打个比方，相当于在一平方厘米的土地上盖高层写字楼一样，难度可想而知。</p><p><a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/Mgprdp.png" data-fancybox="group" data-caption="Mgprdp" class="fancybox"><img alt="Mgprdp" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/Mgprdp.png" class="lazyload" title="Mgprdp"></a></p><p>▲看似光滑的芯片表面，其实有多层复杂电路设计</p><p>美国在全球芯片设计领域市场占有率是68%，中国台湾地区市场占有率是16%位居第2，中国大陆则以13%的市场占有率位居第3。中国占比13%嫌低？在芯片产业链中，相比其他阶段，中国在芯片设计中表现是最好的。</p><p>华为海思就是这么一个“写菜谱”的。去年华为发布最新的手机处理芯片麒麟990采用7纳米工艺拥有103亿晶体管，是世界上首个突破百亿晶体管的手机处理器，总体性能可以和高通和苹果同类产品比肩。</p><p>菜谱写完以后完成后交给大厨去做菜，大厨就是芯片制造企业。世界上三大芯片制造巨头分别是中国台湾地区的台积电、韩国的三星和美国的英特尔。 <a href="https://i1.wp.com/mmbiz.qpic.cn/mmbiz_jpg/RIQJDM7oiajfQBuKEMvicG8vAan91jBdMEHb16CLmlFAIBCkfyRdpzR4ylg1IZaL2wiacpplJIUMBU4zDzbESMrNw/640?wx_fmt=jpeg" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" data-src="https://i1.wp.com/mmbiz.qpic.cn/mmbiz_jpg/RIQJDM7oiajfQBuKEMvicG8vAan91jBdMEHb16CLmlFAIBCkfyRdpzR4ylg1IZaL2wiacpplJIUMBU4zDzbESMrNw/640?wx_fmt=jpeg" class="lazyload" title="img"></a></p><p>▲全球前五的芯片制造企业</p><p>以排名第一的台湾台积电为例，台积电主营业务就是芯片代工，台积电现在以自己的7nm芯片生产线称霸江湖。台积电仅凭芯片代工就达到了2000亿美元市值，和中国中石油差距只有不到10%。</p><p><a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/GcBhFr.png" data-fancybox="group" data-caption="GcBhFr" class="fancybox"><img alt="GcBhFr" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/GcBhFr.png" class="lazyload" title="GcBhFr"></a></p><p>▲台积电的标志就是一个晶圆</p><p>中国芯片制造方面顶尖的中芯国际只有28纳米的生产工艺，14纳米工艺才刚刚开始量产，中国芯片制造只能占到世界7.3%的份额。由于中国大陆没有能力生产这样的高规格芯片，华为的麒麟990只能交给中国台湾地区的台积电代工生产。</p><p>那么大厨有没有一把好刀呢？芯片制造设备公司就是生产“刀”的。可惜全球芯片设备制造产业集中在日本、荷兰、美国、韩国四个国家。而这把刀就是”光刻机“。</p><p>就是下图这个究极神器——光刻机，这个神器也是中国求之不得的。 <a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/nhjH33.png" data-fancybox="group" data-caption="nhjH33" class="fancybox"><img alt="nhjH33" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/nhjH33.png" class="lazyload" title="nhjH33"></a></p><p>▲人类工业皇冠上的明珠——光刻机</p><p>荷兰的ASML基本垄断了高端光刻机领域，特别是最新的EUV极紫外光光刻机有生产7纳米制成的能力，ASML全球市场份额100%。 <a href="https://i1.wp.com/mmbiz.qpic.cn/mmbiz_gif/RIQJDM7oiajfmzibMuEf9SmWxdYiaLdV9HwicNES06yDauIwzXxEPguOelUf90Cm9ousoXOC0qSdicuZknmVFqAHCdw/640?wx_fmt=gif" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" data-src="https://i1.wp.com/mmbiz.qpic.cn/mmbiz_gif/RIQJDM7oiajfmzibMuEf9SmWxdYiaLdV9HwicNES06yDauIwzXxEPguOelUf90Cm9ousoXOC0qSdicuZknmVFqAHCdw/640?wx_fmt=gif" class="lazyload" title="img"></a></p><p>光刻机可以简单理解为：用“紫外线”作刀，对晶圆进行雕刻，让芯片上的电路变成人们想要的图案。四个字形容：“硅上雕花”</p><p>人类芯片的发展史其实就是芯片这几平方厘米的面积上锱铢必较的过程。1978年英特尔设计的8086处理器的刻蚀尺寸是3微米，2000年英特尔发布的奔腾4处理器刻蚀尺寸达到了0.09微米（90纳米）。</p><p>请大家记住90纳米这个数字，这是英特尔2000年的技术。之后2015年初发布的第五代酷睿处理器，刻蚀尺寸为14纳米。 <a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/cSmQL1.png" data-fancybox="group" data-caption="cSmQL1" class="fancybox"><img alt="cSmQL1" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/cSmQL1.png" class="lazyload" title="cSmQL1"></a></p><p>▲英特尔90纳米的奔腾4处理器</p><p>2019年AMD发布了7nm的三代锐龙处理器，40年间人类处理器刻蚀尺寸从3微米（3000纳米）到7纳米，翻了400多倍。</p><p>在知乎上有这样一个问题“搞光刻机难还是搞氢弹难？” <a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/Cpjp8y.png" data-fancybox="group" data-caption="Cpjp8y" class="fancybox"><img alt="Cpjp8y" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/Cpjp8y.png" class="lazyload" title="Cpjp8y"></a></p><p>光刻机被誉为”人类工业皇冠上的明珠“不是没有道理的。有人这样形容光刻机：这是一种集合了数学、光学、流体力学、高分子物理与化学、表面物理与化学、精密仪器、机械、自动化、软件、图像识别领域顶尖技术的产物。</p><p>先进的光刻机上有10w个零件，（一辆汽车大概是5000个零件）。</p><p>难道中国人就造不出自己的光刻机了吗？也不是，我们能造落后别人好几代的国产光刻机，别小看这个能力，关键时候，这个能力至少能保证国家的国防等重大领域不被卡脖子。</p><p>国内上海微电子芯片公司的光刻机水平最高，刚刚突破90纳米工艺，90纳米是英特尔2000年奔腾4处理器的水平，距离7纳米顶尖水平还有差好几个珠穆朗玛峰。</p><p><a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/OVNR2i.png" data-fancybox="group" data-caption="OVNR2i" class="fancybox"><img alt="OVNR2i" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/OVNR2i.png" class="lazyload" title="OVNR2i"></a></p><p>▲上海微电子芯片公司SSA600/20最高能达才达到90纳米分辨率</p><p>很多朋友可能会有疑问，既然造不出来，买不行么？咱国家现在也不差钱呀？</p><p><a href="https://i1.wp.com/mmbiz.qpic.cn/mmbiz_gif/RIQJDM7oiajfQBuKEMvicG8vAan91jBdMEMFZC3Rm5ydWjgNQJWnootD0TBydzSa8zx2b6luf9iayOA0gzI3tKR9g/640?wx_fmt=gif" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" data-src="https://i1.wp.com/mmbiz.qpic.cn/mmbiz_gif/RIQJDM7oiajfQBuKEMvicG8vAan91jBdMEMFZC3Rm5ydWjgNQJWnootD0TBydzSa8zx2b6luf9iayOA0gzI3tKR9g/640?wx_fmt=gif" class="lazyload" title="img"></a></p><p>不好意思，有时候真不是有钱就能为所欲为的。想买？不给！</p><p>1996年，美国和他的小伙伴们签署了一个叫做《瓦森纳安排》的协定，没错这个协定就叫做“安排”，目的就是把那些不听美国话的国家给他安排的明明白白。</p><p>瓦森纳安排签署的国家有42个，美国、韩国、日本、德国、荷兰等国家都在列，囊括了几乎所有西方发达国家，中国、伊朗、利比亚等国被纳入受限制国家。 <a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/5eOs0L.png" data-fancybox="group" data-caption="5eOs0L" class="fancybox"><img alt="5eOs0L" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/5eOs0L.png" class="lazyload" title="5eOs0L"></a></p><p>▲瓦森纳安排缔约国家世界上主要国家都在这里了</p><p>瓦森纳安排包含两份控制清单：一份是军民两用商品和技术清单，涵盖了先进材料、材料处理、电子器件、计算机、电信与信息安全、传感与激光、导航与航空电子仪器、船舶与海事设备、推进系统等9大类；另一份是军品清单，涵盖了各类武器弹药、设备及作战平台等共22类，清单长达234页。</p><p><a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/NcpXjN.png" data-fancybox="group" data-caption="NcpXjN" class="fancybox"><img alt="NcpXjN" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/NcpXjN.png" class="lazyload" title="NcpXjN"></a></p><p>▲绿色为签署瓦森纳安排的国家</p><p>签约国家严禁对中国这些被安排国家清单中的高科技和武器。瓦森纳安排虽然允许成员国在自愿的基础上对各自的技术出口实施控制，但实际上成员国在重要的技术出口决策上受到美国的影响。光刻机之类的究极神器，中国想都不要想。</p><p>最狠的是瓦森纳安排还不断在调整，针对中国发展情况围追堵截。2020年初，瓦森纳安排管制品类扩大，新增了“可转为军用的半导体制造材料及网络软件”。实在是劳美国费心了，在遏制中国半导体产业的路上兢兢业业。 <a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/dbtB4H.png" data-fancybox="group" data-caption="dbtB4H" class="fancybox"><img alt="dbtB4H" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/dbtB4H.png" class="lazyload" title="dbtB4H"></a></p><p>如前文所说，荷兰的ASML公司在光刻机领域是当之无愧的老大，最新的极紫外光EUV光刻机能够生产7纳米的CPU，世界上只此一家别无分号，市场份额100%。现在世界主流处理器都开始步入7纳米行列，想生产7纳米芯片就必须有ASML的EUV光刻机。</p><p>既然完全垄断，那价格也是ASML自己说了算，价格不贵1亿美元一台。</p><p>1亿美元对中国来说不算啥，北京二环内几套房而已。一年3000亿美元芯片进口费用，拿几亿出来买EUV也不算啥。</p><p>有钱想买，可惜却买不到。</p><p>2018年中国最大的芯片制造企业向荷兰的ASML花了1.2亿美金订购了一台EUV光刻机，两年过去了，这台光刻机还没拿到荷兰的出口许可。而中国台湾的台积电去年从ASML拿到了十几台EUV光刻机。</p><p><a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/4SUFpJ.png" data-fancybox="group" data-caption="4SUFpJ" class="fancybox"><img alt="4SUFpJ" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/4SUFpJ.png" class="lazyload" title="4SUFpJ"></a></p><p>▲19年ASML的EUV光刻机一半交付台湾地区的台积电</p><p>就连最基础的电子级多晶硅中国有太多课要补。中国的工业硅、多晶硅产量世界第一，可制造芯片用的高纯度电子级多晶硅完全依赖进口。 回到上面那个问题：芯片难造还是氢弹难造？造好用的芯片难。</p><p>氢弹不是商品，不需要考虑市场，不需要考虑高速换代，不需要考虑企业生存，不需要考虑性价比，氢弹要考虑的是按下按钮的那一刻，炸响。</p><p>最终芯片经过一系列复杂的程序，最后的成品长下面这个样子：</p><p><a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/cziYlN.png" data-fancybox="group" data-caption="cziYlN" class="fancybox"><img alt="cziYlN" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/cziYlN.png" class="lazyload" title="cziYlN"></a></p><p>▲中间黑色部分就是芯片的核心</p><p>所以从上面的介绍，大家应该清楚了我们目前的处境，一个懂一些菜谱的厨师，没有好的食材，没有好的炊具，想做出上等佳肴来，太难了。</p><p><a href="https://i1.wp.com/mmbiz.qpic.cn/mmbiz_gif/RIQJDM7oiajfQBuKEMvicG8vAan91jBdMEpSnCmHbR2lshOn4aZOlmnDB2IdzlhrFezbqNpMhxHRRShAUm6icNvZg/640?wx_fmt=gif" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" data-src="https://i1.wp.com/mmbiz.qpic.cn/mmbiz_gif/RIQJDM7oiajfQBuKEMvicG8vAan91jBdMEpSnCmHbR2lshOn4aZOlmnDB2IdzlhrFezbqNpMhxHRRShAUm6icNvZg/640?wx_fmt=gif" class="lazyload" title="img"></a></p><h1 id="03-中国对“芯”的渴望"><a href="#03-中国对“芯”的渴望" class="headerlink" title="03 中国对“芯”的渴望"></a>03 中国对“芯”的渴望</h1><p>有人说，中国为什么不早点搞自己的芯片？搞过。 现在美国对华为封锁，让很多人开始关心中国芯片的发展历程，其实20年前中国搞芯片的热情比现在还要大。 20年前我们国家提出口号，要发展自己的半导体产业。2000年左右是中国芯片发展的黄金时期，1999年北大研制了中国第一个完全自主研发的CPU架构。</p><p>这是中国人最荣耀的时刻，《人民日报》在20世纪的最后一天刊文，称这一成果是“献给新千年的礼物”。可尚在摇篮里的中国芯片毁在了一个骗子手里。</p><p><a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/Q2Dz51.png" data-fancybox="group" data-caption="Q2Dz51" class="fancybox"><img alt="Q2Dz51" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/Q2Dz51.png" class="lazyload" title="Q2Dz51"></a></p><p>▲人民日报：献给新千年的礼物 2003年，上海交大微电子学院的院长陈进，带领自己的团队搞出了一个芯片，叫做“汉芯一号”。有关部门对“汉芯一号”做了测试，得出结论让所有人震惊：汉芯一号已经接近了国际先进水平，一些方面甚至实现了超越。</p><p>这对当时幼小的中国半导体产业来说，就是饿极了想吃个馒头，没想到天上掉下来一大盆红烧肉。 <a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/d84pMO.png" data-fancybox="group" data-caption="d84pMO" class="fancybox"><img alt="d84pMO" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/d84pMO.png" class="lazyload" title="d84pMO"></a></p><p>▲汉芯一号处理器</p><p>陈进被视为是汉芯一号的发明人，更是荣誉加身，授予长江学者称号，随后陈进的“汉芯二号”“汉芯三号”“汉芯四号”项目成功上马，陈进也得到了国家的数亿科研经费。 <a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/7HP7gI.png" data-fancybox="group" data-caption="7HP7gI" class="fancybox"><img alt="7HP7gI" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/7HP7gI.png" class="lazyload" title="7HP7gI"></a></p><p>▲陈进其人</p><p>关于汉芯的荣誉到了2006年戛然而止。清华大学论坛上一个名叫“汉芯黑幕”的帖子曝光汉芯造假。</p><p>经过调查，汉芯一号根本就是一个骗局，这枚举世瞩目的芯片其实是陈进从美国摩托罗拉买的56800芯片，找几个装修师傅打磨掉摩托罗拉的字样，再印上“汉芯一号”，就变成了中国自主研发的芯片。</p><p><a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/5gXD6H.png" data-fancybox="group" data-caption="5gXD6H" class="fancybox"><img alt="5gXD6H" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/5gXD6H.png" class="lazyload" title="5gXD6H"></a></p><p>▲打磨汉芯的民工日记 甚至负责打磨字样的师傅声称自己负责了汉芯的外观设计，这可是中国最有牌面的民工师傅了。</p><p>民工师傅牛皮吹爽了，可中国芯片很不爽。从这以后中国没有人再敢去搞芯片，谁知道你是不是搞得假的？</p><p>新项目上马的时候主管部门审核也变得极为谨慎，谁知道你是不是想套经费？一盆假的“红烧肉”，让中国芯片连吃“馒头”都变得谨慎了起来。 04</p><p>芯片，勒紧裤腰带也得搞</p><p> 2007年秋天，以色列出动战斗机炸毁了叙利亚的一处核设施。</p><p>出动的是F15/F16这样的非隐身战斗机，但是叙利亚严密的防空体系毫无反应。有趣的是，在以色列突袭前一天叙利亚的防空系统雷达刚好坏了，本来以为是正常的损坏，最后才发现是雷达CPU的后门引起的。 <a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/Y0qwFG.png" data-fancybox="group" data-caption="Y0qwFG" class="fancybox"><img alt="Y0qwFG" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/Y0qwFG.png" class="lazyload" title="Y0qwFG"></a></p><p>▲叙利亚设施被摧毁</p><p>叙利亚不是最后一个。2013年伊朗核离心机几千台莫名其妙损坏，几千台离心机疯狂开转，转坏为止。最后发现也是核离心机控制系统出了问题，处理器早就被动了手脚。 <a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/p7DtF4.png" data-fancybox="group" data-caption="p7DtF4" class="fancybox"><img alt="p7DtF4" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/p7DtF4.png" class="lazyload" title="p7DtF4"></a></p><p>现在轮到了中国。</p><p>日经中文网报道，其实在去年美国开始针对华为之后，日本人通过拆解华为手机后，发现华为最高端新机型中国产零件的使用率已经从25%左右大幅上涨到42%，与此同时美国产零部件则从11%左右降到了约1%。</p><p>今天，华为在心声社区发了一张内涵颇深的图</p><p><a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/w1Jno7.png" data-fancybox="group" data-caption="w1Jno7" class="fancybox"><img alt="w1Jno7" data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/w1Jno7.png" class="lazyload" title="w1Jno7"></a></p><p>让我想起一句名言，大意是“阻碍弱者前进路上的花岗岩，会成为强者脚下的垫脚石。“</p><p>想当年美国人用原子弹威胁过我们，苏联人叫嚣着要对我们实施外科手术式的核打击，尽管这样，咱们屈服了吗？没有。</p><p>我们国家当年一穷二白不都照样挺过来么，还搞出了自己的核武器，新中国成立以来就从没怕过谁威胁。</p><p><a href="https://i1.wp.com/mmbiz.qpic.cn/mmbiz_gif/RIQJDM7oiajfQBuKEMvicG8vAan91jBdME4PBDdADOYHJ9w0LgrIEkL6d5A04YftawAdSr4NugKUwBG2PYtthLbA/640?wx_fmt=gif" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" data-src="https://i1.wp.com/mmbiz.qpic.cn/mmbiz_gif/RIQJDM7oiajfQBuKEMvicG8vAan91jBdME4PBDdADOYHJ9w0LgrIEkL6d5A04YftawAdSr4NugKUwBG2PYtthLbA/640?wx_fmt=gif" class="lazyload" title="img"></a></p><p>▲又想威胁我？NO！去你妈的</p><p>中国人的芯片之路必然艰辛，除了义无反顾，我们别无选择。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> 华为 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 华为 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello Hexo</title>
      <link href="/2019/12/28/hello-world/"/>
      <url>/2019/12/28/hello-world/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure></div><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure></div><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure></div><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><div class="justified-gallery"><p><a href="https://gratisography.com/wp-content/uploads/2019/10/gratisography-scary-pumpkin-hand-900x600.jpg" data-fancybox="group" data-caption class="fancybox"><img src="https://gratisography.com/wp-content/uploads/2019/10/gratisography-scary-pumpkin-hand-900x600.jpg" alt title></a><br><a href="https://gratisography.com/wp-content/uploads/2019/10/gratisography-fresh-fish-dinner-900x600.jpg" data-fancybox="group" data-caption class="fancybox"><img src="https://gratisography.com/wp-content/uploads/2019/10/gratisography-fresh-fish-dinner-900x600.jpg" alt title></a><br><a href="https://gratisography.com/wp-content/uploads/2019/10/gratisography-mountain-cloud-landscape-900x600.jpg" data-fancybox="group" data-caption class="fancybox"><img src="https://gratisography.com/wp-content/uploads/2019/10/gratisography-mountain-cloud-landscape-900x600.jpg" alt title></a><br><a href="https://picjumbo.com/wp-content/uploads/iphone-free-stock-photos-2210x3315.jpg" data-fancybox="group" data-caption class="fancybox"><img src="https://picjumbo.com/wp-content/uploads/iphone-free-stock-photos-2210x3315.jpg" alt title></a><br><a href="https://picjumbo.com/wp-content/uploads/young-millennial-girl-drinking-lemonade-and-overlooking-the-city-2210x1473.jpg" data-fancybox="group" data-caption class="fancybox"><img src="https://picjumbo.com/wp-content/uploads/young-millennial-girl-drinking-lemonade-and-overlooking-the-city-2210x1473.jpg" alt title></a><br><a href="https://picjumbo.com/wp-content/uploads/modern-graphic-designer-essentials_free_stock_photos_picjumbo_HNCK4919-2210x1474.jpg" data-fancybox="group" data-caption class="fancybox"><img src="https://picjumbo.com/wp-content/uploads/modern-graphic-designer-essentials_free_stock_photos_picjumbo_HNCK4919-2210x1474.jpg" alt title></a></p>          </div></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to install Node on Mac using NVM and Homebrew</title>
      <link href="/2019/12/23/Install-Multiple-Node/"/>
      <url>/2019/12/23/Install-Multiple-Node/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><p><strong>Version Manager makes it easy to install multiple versions of Node on a Mac. You install NVM using Homebrew, and if you don’t have Homebrew installed yet, read this article.</strong></p><h1 id="Step-1-Install-NVM"><a href="#Step-1-Install-NVM" class="headerlink" title="Step 1: Install NVM"></a>Step 1: Install NVM</h1><p>Install node version manager.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nvm</span><br></pre></td></tr></tbody></table></figure></div><h1 id="Step-2-Create-a-directory-for-NVM"><a href="#Step-2-Create-a-directory-for-NVM" class="headerlink" title="Step 2: Create a directory for NVM"></a>Step 2: Create a directory for NVM</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/.nvm/</span><br></pre></td></tr></tbody></table></figure></div><h1 id="Step-3-Configure-your-environmental-variables"><a href="#Step-3-Configure-your-environmental-variables" class="headerlink" title="Step 3: Configure your environmental variables"></a>Step 3: Configure your environmental variables</h1><p>Either create or open your .bash_profile.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br></pre></td></tr></tbody></table></figure></div><p>Paste this.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> NVM_DIR=~/.nvm</span><br><span class="line"><span class="built_in">source</span> $(brew --prefix nvm)/nvm.sh</span><br></pre></td></tr></tbody></table></figure></div><p>Execute the content we just pasted.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></tbody></table></figure></div><h1 id="Step-4-Double-check-your-work"><a href="#Step-4-Double-check-your-work" class="headerlink" title="Step 4: Double-check your work"></a>Step 4: Double-check your work</h1><p>If you’ve done everything correctly, you should be able to run the nvm command and ask it to list which versions node are available.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm ls</span><br></pre></td></tr></tbody></table></figure></div><h1 id="Step-5-Install-Node"><a href="#Step-5-Install-Node" class="headerlink" title="Step 5: Install Node"></a>Step 5: Install Node</h1><p>You can see a list of previously released versions of node from the NodeJS release page<br>Install Node 6.x.x.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install 6.x.x</span><br></pre></td></tr></tbody></table></figure></div><p>Install Node 8.x.x</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install 8.x.x</span><br></pre></td></tr></tbody></table></figure></div><p>Double-check your installation.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm ls</span><br></pre></td></tr></tbody></table></figure></div><h1 id="Step-6-Set-Node-Globally"><a href="#Step-6-Set-Node-Globally" class="headerlink" title="Step 6: Set Node Globally"></a>Step 6: Set Node Globally</h1><p>You can set a specific version of Node as your default.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm <span class="built_in">alias</span> default 12.x.x</span><br></pre></td></tr></tbody></table></figure></div><h1 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h1><p>Error Example #1<br>If you are having issues with npm, then you might want to try this.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /usr/<span class="built_in">local</span>/lib/node_modules</span><br><span class="line">brew uninstall node</span><br></pre></td></tr></tbody></table></figure></div><p>Install Node version 12.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">brew install node@12</span><br><span class="line"><span class="built_in">echo</span> prefix=~/.npm-packages >> ~/.npmrc</span><br><span class="line">curl -L https://www.npmjs.com/install.sh | sh</span><br></pre></td></tr></tbody></table></figure></div><p>Add this to your local variables so that npm and global npm are usable.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$HOME</span>/.npm-packages/bin:<span class="variable">$PATH</span>"</span></span><br></pre></td></tr></tbody></table></figure></div><p>Source</p><h2 id="Error-Example-2"><a href="#Error-Example-2" class="headerlink" title="Error Example #2"></a>Error Example #2</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">fetching: https://registry.npmjs.org/npm/-/npm-6.4.1.tgz</span><br><span class="line">up to date <span class="keyword">in</span> 0.027s</span><br><span class="line">sh: rimraf: <span class="built_in">command</span> not found</span><br><span class="line">npm ERR! file sh</span><br><span class="line">npm ERR! code ELIFECYCLE</span><br><span class="line">npm ERR! errno ENOENT</span><br><span class="line">npm ERR! syscall spawn</span><br><span class="line">npm ERR! npm@6.4.1 prepare: `node bin/npm-cli.js --no-audit --no-timing prune --prefix=. --no-global && rimraf <span class="built_in">test</span>/*/*/node_modules && make -j4 doc`</span><br><span class="line">npm ERR! spawn ENOENT</span><br><span class="line">npm ERR!</span><br><span class="line">npm ERR! Failed at the npm@6.4.1 prepare script.</span><br><span class="line">npm ERR! This is probably not a problem with npm. There is likely additional logging output above.</span><br><span class="line">npm ERR! A complete <span class="built_in">log</span> of this run can be found <span class="keyword">in</span>:</span><br><span class="line">npm ERR!     /Users/myaccount/.npm/_logs/*-debug.log</span><br><span class="line">npm ERR! code E404</span><br><span class="line">npm ERR! 404 Not Found: 0.99s@latest</span><br><span class="line">npm ERR! A complete <span class="built_in">log</span> of this run can be found <span class="keyword">in</span>:</span><br><span class="line">npm ERR!     /Users/myaccount/.npm/_logs/*-debug.log</span><br><span class="line">It failed</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> Frontend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Install K8S on Centos 7.5</title>
      <link href="/2019/12/07/install-k8s/"/>
      <url>/2019/12/07/install-k8s/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="Install-K8S-on-Centos-7-5"><a href="#Install-K8S-on-Centos-7-5" class="headerlink" title="Install K8S on Centos 7.5"></a>Install K8S on Centos 7.5</h1><p>Kubernetes (K8s) uses a containerization platform like Docker, containerd, etc. and requires a Registry to download and use Docker images. Docker Hub is the global public registry that serves the purpose. However, there are situations, when we want to use Kubernetes (K8s) in a private network. In such a situation, we cannot access Docker Hub, therefore, we must configure a Private Docker Registry for our Kubernetes (K8s) cluster.</p><p>In this article, we will install Kubernetes (K8s) offline on CentOS 7. We are not configuring a Private Docker Registry here, but you can read our following articles to configure it by yourself.</p><ul><li>Configure Secure Registry with Docker-Distribution on CentOS 7</li><li>Configure a Private Docker Registry on CentOS 7<h2 id="Install-and-prepare-the-Centos7-5-Virtual-Machine"><a href="#Install-and-prepare-the-Centos7-5-Virtual-Machine" class="headerlink" title="Install and prepare the Centos7.5 Virtual Machine"></a>Install and prepare the Centos7.5 Virtual Machine</h2>I chose to install Centos7.5 VM on VSphere, you can choose to install th centos on your local virtualbox.<br><a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/E8SrS9.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/E8SrS9.png" class="lazyload"></a><br>Finish the installation first. Make sure to turn on the network during the installation.<br><a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/xRzPkJ.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/xRzPkJ.png" class="lazyload"></a><br>In our example, we will use one <strong>master</strong> and one <strong>one node</strong>.<h3 id="Prepare-the-Virtual-Machine"><a href="#Prepare-the-Virtual-Machine" class="headerlink" title="Prepare the Virtual Machine"></a>Prepare the Virtual Machine</h3><h4 id="System-Specifiction"><a href="#System-Specifiction" class="headerlink" title="System Specifiction"></a>System Specifiction</h4>We have configured two CentOS 7 virtual machines.<table><thead><tr><th>Hostname</th><th>docker-online.example.com</th><th>docker-offline.example.com</th></tr></thead><tbody><tr><td>Operating System</td><td>CentOS 7.6</td><td>CentOS 7.6</td></tr><tr><td>Internet</td><td>Yes</td><td>No</td></tr><tr><td>Docker Version</td><td>B3</td><td>C3</td></tr></tbody></table></li></ul><h2 id="Download-the-kube"><a href="#Download-the-kube" class="headerlink" title="Download the kube"></a>Download the kube</h2></body></html>]]></content>
      
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Introduce K8S</title>
      <link href="/2019/12/07/k8s/"/>
      <url>/2019/12/07/k8s/</url>
      
        <content type="html"><![CDATA[<html><head></head><body><h1 id="Basic-Concept"><a href="#Basic-Concept" class="headerlink" title="Basic Concept"></a>Basic Concept</h1><p><a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/5UmgFx.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/5UmgFx.png" class="lazyload"></a></p><h2 id="Master"><a href="#Master" class="headerlink" title="Master"></a>Master</h2><p>A physical machine. It is using to monitor and dispatch to each node to work. The master is the controller.</p><h2 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h2><p>A node can be a virtual or physical machine. A node is a worker</p><h2 id="Pod"><a href="#Pod" class="headerlink" title="Pod"></a>Pod</h2><ul><li>A pod is the smallest unit in K8S. A pod is a container of containers.</li><li>A pod contains can container many containers.</li><li>A pod is a process.</li><li>Each pod has its own IP address.</li><li>Each pod can communicate, but the communication has to go via kube-proxy.</li><li>Pause is a root container in the pod.</li><li>Pod should contain a complete module per container.</li><li>You can use the analogy that each pod is a virtual machine.</li><li>All the communication should go through the pause between it goes out the pod<br><a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/wyVam5.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/wyVam5.png" class="lazyload"></a><h2 id="Label"><a href="#Label" class="headerlink" title="Label"></a>Label</h2>Label is a description tag of a pod.<h2 id="Replication-Controller"><a href="#Replication-Controller" class="headerlink" title="Replication Controller"></a>Replication Controller</h2>It is used to replicate, delete, add new pods. It monitors the system has enough pods between nodes.<h2 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h2>Service is a logic group. Usually, the same services are put into the same pod. E.g Backend services are grouped into one pod and frontend services are grouped in another pod.<br><a href="https://raw.githubusercontent.com/geekdanny/images/master/blog/4iMG69.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://raw.githubusercontent.com/geekdanny/images/master/blog/4iMG69.png" class="lazyload"></a></li></ul></body></html>]]></content>
      
      
      <categories>
          
          <category> DevOps </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
